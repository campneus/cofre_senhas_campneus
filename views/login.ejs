<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/login.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="login-body">
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <div class="logo">
                    <i class="fas fa-shield-alt"></i>
                    <h1>Sistema de Senhas</h1>
                </div>
                <p class="subtitle">Acesso seguro e controlado</p>
            </div>

            <div class="login-form-container">
                <form id="loginForm" class="login-form">
                    <div class="form-group">
                        <label for="email">E-mail</label>
                        <div class="input-group">
                            <i class="fas fa-envelope"></i>
                            <input type="email" id="email" name="email" required placeholder="seu@email.com">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="password">Senha</label>
                        <div class="input-group">
                            <i class="fas fa-lock"></i>
                            <input type="password" id="password" name="password" required placeholder="Sua senha">
                            <button type="button" class="toggle-password" onclick="togglePassword()">
                                <i class="fas fa-eye" id="toggleIcon"></i>
                            </button>
                        </div>
                    </div>

                    <button type="submit" class="login-btn" id="loginBtn">
                        <span class="btn-text">Entrar</span>
                        <i class="fas fa-spinner fa-spin loading-icon" style="display: none;"></i>
                    </button>
                </form>

                <div class="forgot-password">
                    <a href="#" id="forgotPasswordLink">Esqueci minha senha</a>
                </div>
            </div>

            <div class="login-footer">
                <p>&copy; 2024 Sistema de Senhas. Todos os direitos reservados.</p>
            </div>
        </div>

        <div class="background-pattern"></div>
    </div>

    <script>
        // Elementos do DOM
        const loginForm = document.getElementById('loginForm');
        const loginBtn = document.getElementById('loginBtn');
        const forgotPasswordLink = document.getElementById('forgotPasswordLink');

        // Login com email e senha
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            
            setLoading(true);
            
            try {
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (data.success) {
                    // Salvar token no localStorage
                    localStorage.setItem('authToken', data.token);
                    localStorage.setItem('user', JSON.stringify(data.user));
                    
                    showSuccess('Login realizado com sucesso!');
                    
                    // Redirecionar para dashboard após 1 segundo
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 1000);
                } else {
                    throw new Error(data.error || 'Erro no login');
                }
                
            } catch (error) {
                console.error('Erro no login:', error);
                let errorMessage = 'Erro ao fazer login';
                
                // Personalizar mensagens de erro baseadas no código
                if (error.message.includes('INVALID_CREDENTIALS')) {
                    errorMessage = 'Email ou senha incorretos';
                } else if (error.message.includes('USER_DISABLED')) {
                    errorMessage = 'Usuário desativado. Entre em contato com o administrador';
                } else if (error.message.includes('MISSING_CREDENTIALS')) {
                    errorMessage = 'Email e senha são obrigatórios';
                } else {
                    errorMessage = error.message;
                }
                
                showError(errorMessage);
                setLoading(false);
            }
        });

        // Esqueci minha senha
        forgotPasswordLink.addEventListener('click', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('email').value;
            
            if (!email) {
                showError('Por favor, digite seu e-mail antes de clicar em "Esqueci minha senha"');
                return;
            }
            
            try {
                const response = await fetch('/api/auth/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();
                
                if (data.success) {
                    showSuccess(data.message);
                    
                    // Se estiver em desenvolvimento, mostrar o token
                    if (data.resetToken) {
                        console.log('Token de recuperação:', data.resetToken);
                        showInfo('Token de recuperação foi exibido no console (apenas desenvolvimento)');
                    }
                } else {
                    throw new Error(data.error || 'Erro ao solicitar recuperação de senha');
                }
                
            } catch (error) {
                console.error('Erro ao solicitar recuperação:', error);
                showError(error.message || 'Erro ao solicitar recuperação de senha');
            }
        });

        // Função para mostrar loading
        function setLoading(loading) {
            const btnText = document.querySelector('.btn-text');
            const loadingIcon = document.querySelector('.loading-icon');
            
            if (loading) {
                btnText.style.display = 'none';
                loadingIcon.style.display = 'inline-block';
                loginBtn.disabled = true;
            } else {
                btnText.style.display = 'inline-block';
                loadingIcon.style.display = 'none';
                loginBtn.disabled = false;
            }
        }

        // Função para mostrar erro
        function showError(message) {
            showMessage(message, 'error');
        }

        // Função para mostrar sucesso
        function showSuccess(message) {
            showMessage(message, 'success');
        }

        // Função para mostrar informação
        function showInfo(message) {
            showMessage(message, 'info');
        }

        // Função para mostrar mensagem
        function showMessage(message, type) {
            // Remover mensagem anterior se existir
            const existingMessage = document.querySelector('.message');
            if (existingMessage) {
                existingMessage.remove();
            }

            // Criar elemento de mensagem
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}-message`;
            
            let icon = 'fa-exclamation-triangle';
            if (type === 'success') icon = 'fa-check-circle';
            if (type === 'info') icon = 'fa-info-circle';
            
            messageDiv.innerHTML = `
                <i class="fas ${icon}"></i>
                <span>${message}</span>
            `;

            // Inserir antes do formulário
            const formContainer = document.querySelector('.login-form-container');
            formContainer.insertBefore(messageDiv, formContainer.firstChild);

            // Remover após 5 segundos
            setTimeout(() => {
                messageDiv.remove();
            }, 5000);
        }

        // Função para toggle da senha
        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const toggleIcon = document.getElementById('toggleIcon');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        // Verificar se já está logado
        const token = localStorage.getItem('authToken');
        if (token) {
            // Verificar se token ainda é válido
            fetch('/api/auth/verify', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ token })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Token válido, redirecionar para dashboard
                    window.location.href = '/dashboard';
                }
            })
            .catch(() => {
                // Token inválido, limpar localStorage
                localStorage.removeItem('authToken');
                localStorage.removeItem('user');
            });
        }
    </script>
</body>
</html>

